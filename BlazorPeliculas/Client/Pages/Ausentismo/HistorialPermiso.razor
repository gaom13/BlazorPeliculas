@using BlazorPeliculas.Shared
@inject SweetAlertService swal
@inject HttpClient Http

<div>
    <h2 class="text-azul-principal" style="font-size: 23px">
        <strong>Historial</strong>
    </h2>
</div>

<div class="cuadro-verde-principal">
    <div class="container-fluid">
        <div class="row">
            <div class="col-4 p-0">
                <RadzenLabel class="text-azul-principal" Text="Desde" Component="DatePickerHourFormat" />
                <RadzenDatePicker Style="width: 170px;" @bind-Value=@date ShowTime="false" HourFormat="12" DateFormat="MM/dd/yyyy" Name="DatePickerHourFormat" />
            </div>
            <div class="col-4 p-0">
                <RadzenLabel class="text-azul-principal" Text="Hasta" Component="DatePickerHourFormat" />
                <RadzenDatePicker Style="width: 180px;" @bind-Value=@date ShowTime="false" HourFormat="12" DateFormat="MM/dd/yyyy" Name="DatePickerHourFormat" />
            </div>
            <div class="col-4 d-flex align-items-center justify-content-start">
                <RadzenButton class="me-2" Click="Modificar" Icon="refresh" />
                <RadzenButton class="me-2 fondo-naranja" Click="Modificar" Icon="file_download" />
            </div>
        </div>

        <div class="row">
            @if (forecasts == null)
            {
                <p><em>Loading...</em></p>
            }
            else
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Estado</th>
                            <th>Descripción</th>
                            <th>Desde</th>
                            <th>Hasta</th>
                            <th>Horas</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var forecast in forecasts)
                        {
                            <tr>
                                <td>1</td>
                                <td>@forecast.Summary</td>
                                <td>@forecast.Date.ToShortDateString()</td>
                                <td>@forecast.Date.AddDays(3).ToShortDateString()</td>
                                <td>@forecast.TemperatureC</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>

</div>

@code {
    DateTime date = DateTime.Now;
    SweetAlertServiceUtilidad sweetAlertService;

    private WeatherForecast[]? forecasts;

    protected override async void OnInitialized()
    {
        sweetAlertService = new SweetAlertServiceUtilidad(swal);
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast");
        StateHasChanged();
    }

    public async void Modificar()
    {
        var confirmado = await sweetAlertService.Confirmacion(
            "Confirmación",
            $"¿Deseas modificar el permiso: ?"
        );

        if (confirmado)
        {
            return;
        }
    }
}
